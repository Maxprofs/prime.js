A few comments for developers on this project. In order to keep things consistent and clean and avoid the mess that so
many other frameworks have become, here are the rules:

  * Alphabetize all methods inside classes. This will help other people find them quickly when browser via the web
    or anywhere else without search capabilities (this is rare I know, but it helps).

  * If there is another function that is similar to yours, duplicate the method signature as closely as you possibly
    can.

  * Use good names that have meaning.

  * Document everything (except tests - unless you want to).

  * Don't define all the variables for a function at the top of the function. This should NOT be a performance concern
    at this point.

  * Don't inline variables (var foo, bar, baz)

  * Follow get, set, is, has method naming when appropriate

  * Avoid relying on events. Pretend your classes are outside of the browser first and then add the necessary event
    listeners at the end to make it work in the browser


Testing --

  Running the tests require some kind of web server to correctly serve some of the test files up.  Typically for Macs,
  we can use the system Apache server to do this.

  1) Go to System Preference > Sharing > Web Sharing and turn this on.
  2) This turns on several directories as document roots, the easiest to use is ~/Sites.  Create an APACHE_HOME environment
     variable and set it to ~/Sites
  3) Run gb testJS, which will basically copy the src directory into ~/Sites/prime-tests.
  4) Open http://localhost/~<username>/prime-tests/test/html/test.html
  5) Reward yourself with some coffee, though the tests don't take that long.

Testing Mountain Lion --

  Apple removed the handy Web Sharing preference pane option in Mountain Lion, so you'll need an alternate route.  The
  following blog posts help sort that out:
  http://reviews.cnet.com/8301-13727_7-57481978-263/how-to-enable-web-sharing-in-os-x-mountain-lion/
  http://tlrobinson.net/blog/2008/06/mac-os-x-web-sharing-apache-and-symlinks/